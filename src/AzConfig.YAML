name: 7.$(DayOfYear)$(Rev:.r)
pool:
  vmImage: ubuntu-latest
variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm

resources:
  - repo: self
jobs:
  - job: Build
    displayName: Produce Dev and Prod builds

    steps:
      - checkout: self
        persistCredentials: true

      - task: Cache@2
        displayName: Cache NPM packages
        inputs:
          key: 'npm | "$(Agent.OS)" | src/package-lock.json'
          restoreKeys: |
            npm | "$(Agent.OS)"
            npm
          path: $(npm_config_cache)

      - task: Npm@1
        displayName: 'npm install'
        inputs:
          command: 'custom'
          workingDir: 'src'
          customCommand: 'install --legacy-peer-deps'

      - task: Npm@1
        displayName: 'npm run build:ngrx-utils'
        continueOnError: true
        inputs:
          command: custom
          workingDir: 'src'
          verbose: false
          customCommand: 'run build:ngrx-utils'

      - task: SonarCloudPrepare@1
        displayName: 'Prepare analysis on SonarCloud'
        inputs:
          SonarCloud: 'SonarCloud IkeMtz'
          organization: ikemtz
          scannerMode: CLI
          cliProjectKey: AzConfig
          cliProjectName: AzConfig
          extraProperties: |
            sonar.projectKey=AzConfig
            sonar.sourceEncoding=UTF-8
            sonar.sources=src/apps/imng-az-func-configr/src,src/libs
            sonar.exclusions=**/node_modules/**,**/*.spec.ts,src/apps/imng-az-func-configr/src/app/models/**,**/main.ts,**/environment.prod.ts,src/libs/**,src/apps/nurse-cron/**,**/jest.config.ts
            sonar.tests=src/apps/imng-az-func-configr/src,src/libs
            sonar.test.inclusions=**/*.spec.ts
            sonar.javascript.lcov.reportPaths=src/coverage/apps/imng-az-func-configr/lcov.info
            sonar.coverage.exclusions=src/libs/**

      - task: Npm@1
        displayName: 'npm run lint:azc'
        inputs:
          command: custom
          workingDir: 'src'
          verbose: false
          customCommand: 'run lint:azc'

      - task: Npm@1
        displayName: 'npm run test:azc'
        inputs:
          command: custom
          workingDir: 'src'
          verbose: false
          customCommand: 'run test:azc'

      - task: Npm@1
        displayName: 'npm run build [DEVELOPMENT BUILD]'
        inputs:
          command: custom
          workingDir: 'src'
          verbose: false
          customCommand: 'run build:azc'

      - task: SonarCloudAnalyze@1
        displayName: 'Run Code Analysis'

      - task: SonarCloudPublish@1
        displayName: 'Publish Quality Gate Result'

      - task: sonarcloud-buildbreaker@2
        inputs:
          SonarCloud: 'SonarCloud IkeMtz'
          organization: 'ikemtz'

      - task: PublishCodeCoverageResults@1
        displayName: 'Publish code coverage from $(System.DefaultWorkingDirectory)/src/coverage/**/cobertura-coverage.xml'
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/src/coverage/**/cobertura-coverage.xml'
          reportDirectory: '$(System.DefaultWorkingDirectory)/src/coverage/'
          failIfCoverageEmpty: true

      - task: PublishTestResults@2
        displayName: 'Publish Test Results junit.*.xml'
        inputs:
          testResultsFiles: 'src/junit.*.xml'
          mergeTestResults: true
          failTaskOnFailedTests: true

      - task: Npm@1
        displayName: 'npm run distribute azc-cicd-scripts [DEVELOPMENT BUILD]'
        inputs:
          command: custom
          workingDir: 'src'
          verbose: false
          customCommand: 'run distribute:azc-cicd-scripts'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: dev-drop [DEVELOPMENT BUILD]'
        inputs:
          PathtoPublish: 'src/dist'
          ArtifactName: 'debug-drop'

      - task: Docker@2
        inputs:
          containerRegistry: 'IkeMtz Docker Hub'
          repository: 'ikemtz/azconfig'
          command: 'buildAndPush'
          Dockerfile: 'src/azconfig.local.Dockerfile'
          buildContext: 'src/'
          tags: 'latest'

      - task: Npm@1
        displayName: 'npm run build [RELEASE BUILD]'
        inputs:
          command: custom
          workingDir: 'src'
          verbose: false
          customCommand: 'run build:azc-prod'

      - task: Npm@1
        displayName: 'npm run distribute azc-cicd-scripts [RELEASE BUILD]'
        inputs:
          command: custom
          workingDir: 'src'
          verbose: false
          customCommand: 'run distribute:azc-cicd-scripts'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: prod-drop [RELEASE BUILD]'
        inputs:
          PathtoPublish: 'src/dist'
          ArtifactName: 'release-drop'

      - task: GitTag@5
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        inputs:
          workingdir: '$(SYSTEM.DEFAULTWORKINGDIRECTORY)'
          tagUser: 'ikemtz'
          tagEmail: 'ikemtz@outlook.com'
          tag: 'azcf-$(Build.BuildNumber)'
          tagMessage: 'azcf-$(Build.BuildNumber)'
          useLightweightTags: true
trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    include:
      - src/apps/imng-az-func-configr/*
      - src/package.json
      - src/AzConfig.YAML
pr:
  branches:
    include:
      - master
  paths:
    include:
      - src/apps/imng-az-func-configr/*
      - src/package.json
      - src/AzConfig.YAML
