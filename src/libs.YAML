name: 2.$(DayOfYear)$(Rev:.rr)
variables:
  AZP_BASHV3_OLD_SOURCE_BEHAVIOR: true
  npm_config_cache: $(Pipeline.Workspace)/.npm

resources:
  - repo: self
jobs:
  - job: Build
    displayName: Produce Dev and Prod builds

    steps:
      - checkout: self
        persistCredentials: true

      - task: Cache@2
        inputs:
          key: 'npm | "$(Agent.OS)" | src/package-lock.json'
          restoreKeys: |
            npm | "$(Agent.OS)"
            npm
          path: $(npm_config_cache)
          displayName: Cache NPM packages

      - task: Npm@1
        displayName: 'npm install'
        inputs:
          workingDir: 'src'
          verbose: false

      - task: Bash@3
        displayName: 'running versioneer'
        inputs:
          filePath: '$(System.DefaultWorkingDirectory)/src/versioneer.sh'
          arguments: '$(Build.BuildNumber)'
          workingDirectory: '$(System.DefaultWorkingDirectory)/src/'

      - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
        displayName: 'Prepare analysis on SonarCloud'
        inputs:
          SonarCloud: 'SonarCloud IkeMtz'
          organization: ikemtz
          scannerMode: CLI
          cliProjectKey: Nurser
          cliProjectName: Nurser
          extraProperties: |
            sonar.projectKey=IMNG-Libs
            sonar.sourceEncoding=UTF-8
            sonar.sources=src/libs
            sonar.exclusions=**/node_modules/**,**/testing/**,**/*.spec.ts,src/apps/nurse-cron/src/app/models/**,**/main.ts,**/environment.prod.ts,**/assets/*
            sonar.tests=src/libs
            sonar.test.inclusions=**/*.spec.ts
            sonar.javascript.lcov.reportPaths=src/coverage/libs/imng-application-insights-ngrx/lcov.info,src/coverage/libs/imng-auth0-oidc/lcov.info,src/coverage/libs/imng-kendo-chart-odata/lcov.info,src/coverage/libs/imng-kendo-data-entry/lcov.info,src/coverage/libs/imng-kendo-grid/lcov.info,src/coverage/libs/imng-kendo-grid-odata/lcov.info,src/coverage/libs/imng-kendo-odata/lcov.info,src/coverage/libs/imng-ngrx-utils/lcov.info,src/coverage/libs/imng-ngxb-typeahead/lcov.info,src/coverage/libs/imng-nrsrx-client-utils/lcov.info,src/coverage/libs/imng-signalr-ngrx/lcov.info,src/coverage/libs/imng-ngrx-idle/lcov.info
      #           sonar.coverage.exclusions=src/libs/**

      - task: Npm@1
        displayName: 'npm run lint:libs'
        inputs:
          command: custom
          workingDir: 'src'
          verbose: false
          customCommand: 'run lint:libs'

      - task: Npm@1
        displayName: 'npm run build:libs'
        inputs:
          command: custom
          workingDir: 'src'
          verbose: false
          customCommand: 'run build:libs'
          continueOnError: true

      - task: Npm@1
        displayName: 'npm run test:libs'
        inputs:
          command: custom
          workingDir: 'src'
          verbose: false
          customCommand: 'run test:libs'

      - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
        displayName: 'Run Code Analysis'

      - task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
        displayName: 'Publish Quality Gate Result'

      - task: sonarcloud-buildbreaker@2
        inputs:
          SonarCloud: 'SonarCloud IkeMtz'
          organization: 'ikemtz'

      - task: SnykSecurityScan@0
        inputs:
          serviceConnectionEndpoint: 'synk'
          testType: 'app'
          severityThreshold: 'medium'
          monitorOnBuild: false
          failOnIssues: true
          projectName: 'imng-packages'
          organization: 'ikemtz'
          testDirectory: '$(Build.SourcesDirectory)/src/libs'
          additionalArguments: '--all-projects --detection-depth=2'

      - task: PublishCodeCoverageResults@1
        displayName: 'Publish code coverage from $(System.DefaultWorkingDirectory)/src/coverage/**/cobertura-coverage.xml'
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/src/coverage/**/cobertura-coverage.xml'
          reportDirectory: '$(System.DefaultWorkingDirectory)/src/coverage/'
          failIfCoverageEmpty: true

      - task: PublishTestResults@2
        displayName: 'Publish Test Results junit.*.xml'
        inputs:
          testResultsFiles: 'src/junit.*.xml'
          mergeTestResults: true
          failTaskOnFailedTests: true

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: dev-drop [BUILD Packages]'
        inputs:
          PathtoPublish: 'src/dist'
          ArtifactName: 'package-drop'

      - task: GitTag@5
        inputs:
          workingdir: '$(SYSTEM.DEFAULTWORKINGDIRECTORY)'
          tagUser: 'ikemtz'
          tagEmail: 'ikemtz@outlook.com'
          tag: 'pack-$(Build.BuildNumber)'
          tagMessage: 'Build libs.yaml'
          useLightweightTags: true
          conditions: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    include:
      - src/libs/*
      - src/package.json
      - src/libs.YAML
pr:
  branches:
    include:
      - master
  paths:
    include:
      - src/libs/*
      - src/package.json
      - src/libs.YAML
