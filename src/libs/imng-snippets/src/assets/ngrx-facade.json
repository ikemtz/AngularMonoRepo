{
  "NgRxFacadeDataEntry": {
    "prefix": "imng-ngrx-facade-data-entry",
  "body": [
    "import { Injectable } from '@angular/core';",
    "import { select, Store } from '@ngrx/store';",
    "import { IDataEntryFacade } from 'imng-kendo-data-entry';",
    "",
    "import { ${1:__NGRX_FEATURE_KEY__PASCAL_CASE__}sPartialState } from '../+state/${2:__NGRX_FEATURE_KEY__CAMEL_CASE__}.reducer';",
    "import { ${2:__NGRX_FEATURE_KEY__CAMEL_CASE__}Queries } from '../+state/${2:__NGRX_FEATURE_KEY__CAMEL_CASE__}.selectors';",
    "import * as ${2:__NGRX_FEATURE_KEY__CAMEL_CASE__}ActionTypes from '../+state/${2:__NGRX_FEATURE_KEY__CAMEL_CASE__}.actions';",
    "import { I${3:__ENTITY_NAME__PASCAL_CASE__} } from '../__MODEL_LOCATION__';",
    "",
    "@Injectable()",
    "export class ${3:__ENTITY_NAME__PASCAL_CASE__}CrudFacade implements IDataEntryFacade<I${3:__ENTITY_NAME__PASCAL_CASE__}> {",
    "  loading$ = this.store.pipe(select(${2:__NGRX_FEATURE_KEY__CAMEL_CASE__}Queries.getLoading));",
    "  currentEntity$ = this.store.pipe(select(${2:__NGRX_FEATURE_KEY__CAMEL_CASE__}Queries.getCurrent${3:__ENTITY_NAME__PASCAL_CASE__}));",
    "  isEditActive$ = this.store.pipe(select(${2:__NGRX_FEATURE_KEY__CAMEL_CASE__}Queries.getIsEdit${3:__ENTITY_NAME__PASCAL_CASE__}Active));",
    "  isNewActive$ = this.store.pipe(select(${2:__NGRX_FEATURE_KEY__CAMEL_CASE__}Queries.getIsNew${3:__ENTITY_NAME__PASCAL_CASE__}Active));",
    "",
    "  constructor(private readonly store: Store<${1:__NGRX_FEATURE_KEY__PASCAL_CASE__}sPartialState>) { }",
    "  setCurrentEntity(item: I${3:__ENTITY_NAME__PASCAL_CASE__}): void {",
    "    this.store.dispatch(${2:__NGRX_FEATURE_KEY__CAMEL_CASE__}ActionTypes.setCurrent${3:__ENTITY_NAME__PASCAL_CASE__}(item));",
    "  }",
    "  clearCurrentEntity(): void {",
    "    this.store.dispatch(${2:__NGRX_FEATURE_KEY__CAMEL_CASE__}ActionTypes.clearCurrent${3:__ENTITY_NAME__PASCAL_CASE__}());",
    "  }",
    "  saveNewEntity(item: I${3:__ENTITY_NAME__PASCAL_CASE__}): void {",
    "    this.store.dispatch(${2:__NGRX_FEATURE_KEY__CAMEL_CASE__}ActionTypes.save${3:__ENTITY_NAME__PASCAL_CASE__}Request(item));",
    "  }",
    "  updateExistingEntity(item: I${3:__ENTITY_NAME__PASCAL_CASE__}): void {",
    "    this.store.dispatch(${2:__NGRX_FEATURE_KEY__CAMEL_CASE__}ActionTypes.update${3:__ENTITY_NAME__PASCAL_CASE__}Request(item));",
    "  }",
    "}"
  ],
    "description": "NgRxFacadeDataEntry"
  },
  "NgRxFacadeLoadEntities": {
    "prefix": "imng-ngrx-facade-load-entities",
    "body": [
      "public loadEntities(state: ODataState): void {",
      "this.store.dispatch(${1:__NGRX_FEATURE_KEY_NAME__CAMEL_CASE__}ActionTypes.load${2:__ENTITY_NAME__PASCAL_CASE__}sRequest(state));",
      "}"
    ],
    "description": "Create Load Entities method for Facades"
  },
  "NgRxFacadeReloadEntities": {
    "prefix": "imng-ngrx-facade-reload-entities",
    "body": [
      "public reloadEntities(): void {",
      "this.store.dispatch(${1:__NGRX_FEATURE_KEY_NAME__CAMEL_CASE__}ActionTypes.reload${2:__ENTITY_NAME__PASCAL_CASE__}sRequest());",
      "}"
    ],
    "description": "Create Reload Entities method for Facades"
  },
  "NgRxFacadeLoadDropDown": {
    "prefix": "imng-ngrx-facade-load-drop-down",
    "body": [
      "public load${1:__ENTITY_NAME__PASCAL_CASE__}s(state: ODataState): void {",
      "  this.store.dispatch(${2:__NGRX_FEATURE_KEY__CAMEL_CASE__}ActionTypes.load${1:__ENTITY_NAME__PASCAL_CASE__}sRequest(state));",
      "}"
    ],
    "description": "Create NGRX load drop down method for Facades"
  },
  "NgRxFacadeStoreSelect": {
    "prefix": "imng-ngrx-facade-store-select",
    "body": [
      "${1:__ENTITY_NAME__CAMEL_CASE__}s$ = this.store.select(${2:__NGRX_FEATURE_KEY__CAMEL_CASE__}sFeature.select${1/^(.)(.*)$/${1:/upcase}${2}/}s );"
    ],
    "description": "Create NGRX selector for Facades"
  }
}
