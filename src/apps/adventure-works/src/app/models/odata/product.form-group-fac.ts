/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { IProductModel } from './product-model.model';
import { IProductCategory } from './product-category.model';
import { IOrderLineItemForm } from './order-line-item.form-group-fac';

export interface IProductForm {
  id: FormControl<string | null>;
  name: FormControl<string>;
  num: FormControl<string>;
  color: FormControl<string | null>;
  standardCost: FormControl<number>;
  listPrice: FormControl<number>;
  size: FormControl<string | null>;
  weight: FormControl<number | null>;
  productCategoryId: FormControl<string | null>;
  productModelId: FormControl<string | null>;
  sellStartDate: FormControl<Date>;
  sellEndDate: FormControl<Date | null>;
  discontinuedDate: FormControl<Date | null>;
  thumbNailPhoto: FormControl<string | null>;
  productModel: FormControl<IProductModel | null>;
  productCategory: FormControl<IProductCategory | null>;
  orderLineItems: FormArray<FormGroup<IOrderLineItemForm>>;
}

export function ProductFormGroupFac(): FormGroup<IProductForm> {
  return new FormGroup<IProductForm>({
    id: new FormControl<string | null>(null),
    name: new FormControl<string>('', {
      validators: Validators.compose([
        Validators.required,
        Validators.minLength(2),
        Validators.maxLength(50),
      ]),
      nonNullable: true,
    }),
    num: new FormControl<string>('', {
      validators: Validators.compose([
        Validators.required,
        Validators.minLength(10),
        Validators.maxLength(25),
      ]),
      nonNullable: true,
    }),
    color: new FormControl<string | null>(null, {
      validators: Validators.compose([
        Validators.minLength(3),
        Validators.maxLength(15),
      ]),
    }),
    standardCost: new FormControl<number>(0, {
      validators: Validators.required,
      nonNullable: true,
    }),
    listPrice: new FormControl<number>(0, {
      validators: Validators.required,
      nonNullable: true,
    }),
    size: new FormControl<string | null>(null, {
      validators: Validators.maxLength(5),
    }),
    weight: new FormControl<number | null>(null),
    productCategoryId: new FormControl<string | null>(null),
    productModelId: new FormControl<string | null>(null),
    sellStartDate: new FormControl<Date>(new Date(), {
      validators: Validators.required,
      nonNullable: true,
    }),
    sellEndDate: new FormControl<Date | null>(null),
    discontinuedDate: new FormControl<Date | null>(null),
    thumbNailPhoto: new FormControl<string | null>(null, {
      validators: Validators.maxLength(5000),
    }),
    productModel: new FormControl<IProductModel | null>(null),
    productCategory: new FormControl<IProductCategory | null>(null),
    orderLineItems: new FormArray<FormGroup<IOrderLineItemForm>>([]),
  });
}
