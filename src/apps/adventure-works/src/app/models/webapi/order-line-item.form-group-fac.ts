/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { IOrder } from './order.model';
import { IProduct } from './product.model';

export interface IOrderLineItemForm {
  id: FormControl<string | null>;
  orderId: FormControl<string>;
  orderQty: FormControl<number>;
  productId: FormControl<string>;
  unitPrice: FormControl<number>;
  unitPriceDiscount: FormControl<number>;
  lineTotal: FormControl<number>;
  order: FormControl<IOrder | null>;
  product: FormControl<IProduct | null>;
}

export function OrderLineItemFormGroupFac(): FormGroup<IOrderLineItemForm> {
  return new FormGroup<IOrderLineItemForm>({
    id: new FormControl<string | null>(null),
    orderId: new FormControl<string>('', {
      validators: Validators.required,
      nonNullable: true,
    }),
    orderQty: new FormControl<number>(0, {
      validators: Validators.required,
      nonNullable: true,
    }),
    productId: new FormControl<string>('', {
      validators: Validators.required,
      nonNullable: true,
    }),
    unitPrice: new FormControl<number>(0, {
      validators: Validators.required,
      nonNullable: true,
    }),
    unitPriceDiscount: new FormControl<number>(0, {
      validators: Validators.required,
      nonNullable: true,
    }),
    lineTotal: new FormControl<number>(0, {
      validators: Validators.required,
      nonNullable: true,
    }),
    order: new FormControl<IOrder | null>(null),
    product: new FormControl<IProduct | null>(null),
  });
}
