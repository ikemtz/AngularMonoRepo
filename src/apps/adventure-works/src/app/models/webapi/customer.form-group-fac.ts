/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ISalesAgent } from './sales-agent.model';
import { ICustomerAddressForm } from './customer-address.form-group-fac';
import { IOrderForm } from './order.form-group-fac';

export interface ICustomerForm {
  id: FormControl<string | null>;
  num: FormControl<string>;
  name: FormControl<string | null>;
  companyName: FormControl<string>;
  salesAgentId: FormControl<number>;
  emailAddress: FormControl<string | null>;
  phone: FormControl<string | null>;
  salesAgent: FormControl<ISalesAgent | null>;
  customerAddresses: FormArray<FormGroup<ICustomerAddressForm>>;
  orders: FormArray<FormGroup<IOrderForm>>;
}

export function CustomerFormGroupFac(): FormGroup<ICustomerForm> {
  return new FormGroup<ICustomerForm>({
    id: new FormControl<string | null>(null),
    num: new FormControl<string>('', {
      validators: Validators.compose([
        Validators.required,
        Validators.minLength(10),
        Validators.maxLength(15),
      ]),
      nonNullable: true,
    }),
    name: new FormControl<string | null>(null, {
      validators: Validators.maxLength(512),
    }),
    companyName: new FormControl<string>('', {
      validators: Validators.compose([
        Validators.required,
        Validators.maxLength(128),
      ]),
      nonNullable: true,
    }),
    salesAgentId: new FormControl<number>(0, {
      validators: Validators.required,
      nonNullable: true,
    }),
    emailAddress: new FormControl<string | null>(null, {
      validators: Validators.maxLength(250),
    }),
    phone: new FormControl<string | null>(null, {
      validators: Validators.maxLength(25),
    }),
    salesAgent: new FormControl<ISalesAgent | null>(null),
    customerAddresses: new FormArray<FormGroup<ICustomerAddressForm>>([]),
    orders: new FormArray<FormGroup<IOrderForm>>([]),
  });
}
