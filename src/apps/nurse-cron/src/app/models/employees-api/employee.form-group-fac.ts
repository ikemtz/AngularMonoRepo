/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { IEmployeeForm } from './employee.form';
import { IEmployeeCertificationForm } from './employee-certification.form';
import { IEmployeeCompetencyForm } from './employee-competency.form';
import { IEmployeeHealthItemForm } from './employee-health-item.form';

export function EmployeeFormGroupFac(): FormGroup<IEmployeeForm> {
  return new FormGroup<IEmployeeForm>({
    id: new FormControl<string | null | undefined>(null),
    lastName: new FormControl<string>('', {
      validators: Validators.compose([
        Validators.required,
        Validators.minLength(1),
        Validators.maxLength(250),
      ]),
      nonNullable: true,
    }),
    firstName: new FormControl<string>('', {
      validators: Validators.compose([
        Validators.required,
        Validators.minLength(1),
        Validators.maxLength(250),
      ]),
      nonNullable: true,
    }),
    birthDate: new FormControl<Date | null | undefined>(null),
    mobilePhone: new FormControl<string | null | undefined>(null, {
      validators: Validators.maxLength(25),
    }),
    homePhone: new FormControl<string | null | undefined>(null, {
      validators: Validators.maxLength(25),
    }),
    photo: new FormControl<string | null | undefined>(null, {
      validators: Validators.maxLength(4000),
    }),
    email: new FormControl<string>('', {
      validators: Validators.compose([
        Validators.required,
        Validators.minLength(1),
        Validators.maxLength(250),
      ]),
      nonNullable: true,
    }),
    addressLine1: new FormControl<string | null | undefined>(null, {
      validators: Validators.maxLength(250),
    }),
    addressLine2: new FormControl<string | null | undefined>(null, {
      validators: Validators.maxLength(250),
    }),
    city: new FormControl<string | null | undefined>(null, {
      validators: Validators.maxLength(150),
    }),
    state: new FormControl<string | null | undefined>(null, {
      validators: Validators.maxLength(2),
    }),
    zip: new FormControl<string | null | undefined>(null, {
      validators: Validators.maxLength(10),
    }),
    isEnabled: new FormControl<boolean>(false, {
      validators: Validators.required,
      nonNullable: true,
    }),
    hireDate: new FormControl<Date>(new Date(), {
      validators: Validators.required,
      nonNullable: true,
    }),
    fireDate: new FormControl<Date | null | undefined>(null),
    totalHoursOfService: new FormControl<number | null | undefined>(null),
    certificationCount: new FormControl<number>(0, {
      validators: Validators.required,
      nonNullable: true,
    }),
    competencyCount: new FormControl<number>(0, {
      validators: Validators.required,
      nonNullable: true,
    }),
    healthItemCount: new FormControl<number>(0, {
      validators: Validators.required,
      nonNullable: true,
    }),
    employeeCertifications: new FormArray<
      FormGroup<IEmployeeCertificationForm>
    >([]),
    employeeCompetencies: new FormArray<FormGroup<IEmployeeCompetencyForm>>([]),
    employeeHealthItems: new FormArray<FormGroup<IEmployeeHealthItemForm>>([]),
  });
}
