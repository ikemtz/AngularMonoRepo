import { Injectable } from '@angular/core';
import { select, Store } from '@ngrx/store';
import { IDataDeleteFacade } from 'imng-kendo-data-entry';
import { IKendoODataGridFacade } from 'imng-kendo-grid-odata';
import { ODataState } from 'imng-kendo-odata';

import { <%= camelize(pluralizedStoreName) %>Feature, <%= classify(pluralizedStoreName) %>PartialState } from '../+state/<%= dasherize(singularizedStoreName) %>.reducer';
import * as <%= camelize(storeName) %>ActionTypes from '../+state/<%= dasherize(singularizedStoreName) %>.actions';

@Injectable()
export class <%= classify(singularizedName) %>ListFacade implements IKendoODataGridFacade<I<%= classify(name) %>>, IDataDeleteFacade<I<%= classify(name) %>> {
  loading$ = this.store.pipe(select(<%= camelize(pluralizedStoreName) %>Feature.selectLoading));
  gridData$ = this.store.pipe(select(<%= camelize(pluralizedStoreName) %>Feature.selectGridData));
  gridPagerSettings$ = this.store.pipe(select(<%= camelize(pluralizedStoreName) %>Feature.selectGridPagerSettings));
  gridODataState$ = this.store.pipe(select(<%= camelize(pluralizedStoreName) %>Feature.selectGridODataState));

  constructor(private readonly store: Store<<%= classify(pluralizedStoreName) %>PartialState>) {}

  public loadEntities(state: ODataState): void {
    this.store.dispatch(<%= camelize(storeName) %>ActionTypes.load<%= classify(pluralizedName) %>Request(state));
  }

  public reloadEntities(): void {
    this.store.dispatch(<%= camelize(storeName) %>ActionTypes.reload<%= classify(pluralizedName) %>Request());
  }

  public deleteExistingEntity(entity: I<%= classify(name) %>): void {
    this.store.dispatch(<%= camelize(storeName) %>ActionTypes.delete<%= classify(name) %>Request(entity));
  }
}
