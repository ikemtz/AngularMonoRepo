import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { StoreModule } from '@ngrx/store';
import { EffectsModule } from '@ngrx/effects';
import { DataPersistence } from '@nrwl/angular';
import { GridModule, ExcelModule, PDFModule } from '@progress/kendo-angular-grid';
import { DialogModule } from '@progress/kendo-angular-dialog';
import { ImngKendoGridODataModule } from 'imng-kendo-grid-odata';
import { ImngDataEntryDialogModule } from 'imng-kendo-data-entry';
import { ReactiveFormsModule } from '@angular/forms';

import { <%= classify(pluralizedName) %>RoutingModule } from './<%= dasherize(pluralizedName) %>.routing';
import * as from<%= classify(pluralizedName) %>Reducer from './+state/<%= dasherize(singularizedName) %>.reducer';
import { <%= classify(singularizedName) %>Effects } from './+state/<%= dasherize(singularizedName) %>.effects';
<% if (openApiJsonUrl || openApiJsonFileName) { %>
import { <%= classify(singularizedName) %>ListComponent, <%= classify(singularizedName) %>ListFacade } from './<%= dasherize(pluralizedName) %>-list';
import { <%= classify(singularizedName) %>AddComponent, <%= classify(singularizedName) %>EditComponent, <%= classify(singularizedName) %>ApiService, <%= classify(singularizedName) %>CrudFacade  } from './<%= dasherize(pluralizedName) %>-crud';
<% } %>

@NgModule({
  declarations: [<% if (openApiJsonUrl || openApiJsonFileName) { %> <%= classify(singularizedName) %>ListComponent, <%= classify(singularizedName) %>AddComponent, <%= classify(singularizedName) %>EditComponent <% } %>],
  imports: [
    CommonModule,
    GridModule,
    ExcelModule,
    PDFModule,
    DialogModule,
    ImngKendoGridODataModule,
    ImngDataEntryDialogModule,
    ReactiveFormsModule,
    <%= classify(pluralizedName) %>RoutingModule,
    StoreModule.forFeature(from<%= classify(pluralizedName) %>Reducer.<%= underscore(pluralizedName).toUpperCase() %>_FEATURE_KEY, from<%= classify(pluralizedName) %>Reducer.reducer),
    EffectsModule.forFeature([<%= classify(singularizedName) %>Effects]),
  ],
  providers: [
    DataPersistence,
    <% if (openApiJsonUrl || openApiJsonFileName) { %><%= classify(singularizedName) %>ListFacade,
    <%= classify(singularizedName) %>CrudFacade,
    <%= classify(singularizedName) %>ApiService, <% } %>
  ],
})
export class <%= classify(pluralizedName) %>Module { }
